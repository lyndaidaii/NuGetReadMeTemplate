name: Create Issues on Multiple Repositories

on:
  push:
    branches:
      - main

jobs:
  create_issues:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Issues
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const core = require('@actions/core');
            try {
              const repos = ['NuGet/NuGetGallery', 'NuGet/NuGet.Jobs', 'lyndaidaii/TestWithSVG']; // List of repositories
              const title = 'Package is missing NuGet package README file';
              const body = 'As one of the top most installed NuGet packages, your System.Data.SqlClient package is extremely important to the developer ecosystem. The NuGet team has noticed that your package on NuGet.org is missing a README file. Please take a moment to add a README file to your package repository.Our customer research indicates that one of the top problems that package consumers face is insufficient package documentation such as README files. Adding a README file to your package will help users quickly understand what the package is and what it does. Since your README will be the first impression for users when they view your package on NuGet.org, it is crucial for authors to write and include high-quality READMEs for their packages.';

              async function createIssue(repo) {
                const [owner, repoName] = repo.split('/');
                const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
                const issue = await github.issues.create({
                  owner: owner,
                  repo: repoName,
                  title: title,
                  body: body
                });
                console.log(`Issue created in ${repo}:`, issue.data.html_url);
              }

              for (const repo of repos) {
                await createIssue(repo);
              }
            } catch (error) {
              console.error('Error:', error.message);
              core.setFailed(error.message);
            }